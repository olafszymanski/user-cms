type Token {
  token: String!
}

type User {
  id: ID
  username: String
  email: String
  password: String
  admin: Boolean
}

type Query {
  user(id: ID!): User! @isAuth
  users: [User!]! @isAuth
}

input Login {
  username: String!
  password: String!
}

input NewUser {
  username: String!
  email: String!
  password: String!
  admin: Boolean!
}

input UpdateUser {
  id: ID!
  username: String
  email: String
  password: String
  admin: Boolean
}

type Mutation {
  login(input: Login!): Token!

  createUser(input: NewUser!): User! @isAuth
  updateUser(input: UpdateUser!): User! @isAuth
  deleteUser(id: ID!): Boolean! @isAuth
}

directive @isAuth on FIELD_DEFINITION